generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model DocumentType {
  id                     Int                     @id @default(autoincrement())
  name                   String                  @unique
  createdAt              DateTime                @default(now()) @map("created_at")
  updatedAt              DateTime                @updatedAt @map("updated_at")
  description            String?
  formId                 String?                 @map("form_id")
  hideHeader             Boolean                 @default(false) @map("hide_header")
  showFormButtons        Boolean                 @default(true) @map("show_form_buttons")
  documentTitles         DocumentTitle[]
  documentConfigurations DocumentConfiguration[]
  document_fields        document_fields[]
  parent_type_id         String?
  parent_name            String?
  child_type_id          String?
  child_name             String?
  form_template_id       Int?
  form_template          FormTemplate?           @relation("FormTemplateToDocumentType", fields: [form_template_id], references: [id])
  locations              DocumentTypeLocation[]

  @@unique([parent_type_id, child_type_id], name: "parent_type_id_child_type_id")
  @@index([form_template_id])
  @@map("document_types")
}

model DocumentTitle {
  id                       Int                     @id @default(autoincrement())
  title                    String
  created_at               DateTime                @default(now())
  updated_at               DateTime
  shareable                Boolean                 @default(false)
  document_type_id         Int
  is_display               Boolean                 @default(true)
  require_number           Boolean                 @default(false)
  require_valid_date       Boolean                 @default(false)
  require_expire_date      Boolean                 @default(false)
  require_doc_data         Boolean                 @default(false)
  doc_data_options         Json?
  doc_data_name            String?
  require_attachment_front Boolean                 @default(false)
  require_attachment_back  Boolean                 @default(false)
  description              String?
  form_description         String?
  form_title               String?
  document_types           DocumentType            @relation(fields: [document_type_id], references: [id], onDelete: Cascade)
  documentConfigurations   DocumentConfiguration[]
  document_fields          document_fields[]

  @@index([document_type_id])
  @@map("documentTitles")
}

model FormField {
  id                 Int      @id @default(autoincrement())
  template_id        Int
  field_id           String
  field_name         String
  field_type         String
  label              String
  placeholder        String?
  required           Boolean  @default(false)
  is_hidden          Boolean  @default(false)
  order              Int      @default(0)
  full_width         Boolean  @default(true)
  display_conditions Json?
  validation_rules   Json?
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt

  form_template FormTemplate  @relation(fields: [template_id], references: [id], onDelete: Cascade)
  field_options FieldOption[]

  @@index([template_id])
  @@map("form_fields")
}

model DocumentConfiguration {
  id              Int           @id @default(autoincrement())
  regionId        Int           @map("region_id")
  documentTypeId  Int           @map("document_type_id")
  documentTitleId Int           @map("document_title_id")
  typeOfCondition Int           @default(0) @map("type_of_condition")
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")
  active          Boolean       @default(true)
  priority        Int           @default(0)
  customFields    Json?         @map("custom_fields")
  documentTitle   DocumentTitle @relation(fields: [documentTitleId], references: [id], onDelete: Cascade)
  documentType    DocumentType  @relation(fields: [documentTypeId], references: [id], onDelete: Cascade)
  region          Region        @relation(fields: [regionId], references: [id], onDelete: Cascade)

  @@unique([regionId, documentTitleId])
  @@index([documentTypeId])
  @@index([documentTitleId])
  @@index([regionId])
  @@map("document_configurations")
}

model Region {
  id                     Int                     @id @default(autoincrement())
  name                   String
  code                   String                  @unique
  country                String                  @default("US")
  active                 Boolean                 @default(true)
  createdAt              DateTime                @default(now()) @map("created_at")
  updatedAt              DateTime                @updatedAt @map("updated_at")
  documentConfigurations DocumentConfiguration[]

  @@map("regions")
}

model document_fields {
  id                  Int            @id @default(autoincrement())
  field_id            String
  name                String
  label               String
  type                String
  placeholder         String?
  required            Boolean        @default(false)
  order               Int
  full_width          Boolean        @default(true)
  hidden              Boolean        @default(false)
  default_value       String?
  options             Json?
  validation          Json?
  conditional_display Json?
  help_text           String?
  document_type_id    Int
  document_title_id   Int?
  created_at          DateTime       @default(now())
  updated_at          DateTime
  document_titles     DocumentTitle? @relation(fields: [document_title_id], references: [id])
  document_types      DocumentType   @relation(fields: [document_type_id], references: [id], onDelete: Cascade)

  @@index([document_title_id])
  @@index([document_type_id])
}

model FormTemplate {
  id             Int            @id @default(autoincrement())
  form_key       String         @unique
  name           String
  description    String?
  version        Int            @default(1)
  is_active      Boolean        @default(true)
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  form_fields    FormField[]
  document_types DocumentType[] @relation("FormTemplateToDocumentType")

  @@map("form_templates")
}

model FieldOption {
  id           Int      @id @default(autoincrement())
  field_id     Int
  option_value String
  option_label String
  order        Int      @default(0)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  form_field FormField @relation(fields: [field_id], references: [id], onDelete: Cascade)

  @@index([field_id])
  @@map("field_options")
}

model DocumentTypeLocation {
  id               Int      @id @default(autoincrement())
  document_type_id Int
  location_id      Int
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  document_type DocumentType @relation(fields: [document_type_id], references: [id], onDelete: Cascade)

  @@unique([document_type_id, location_id])
  @@map("document_type_locations")
}
